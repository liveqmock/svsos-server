
buildscript {
	repositories {
		maven { url "http://repo.springsource.org/plugins-release" }
	}
	dependencies {
		classpath("org.springframework.build.gradle:propdeps-plugin:0.0.7")
		classpath("org.asciidoctor:asciidoctor-gradle-plugin:0.7.0")
		classpath("org.springframework.build.gradle:docbook-reference-plugin:0.2.8")
		classpath("ws.antonov.gradle.plugins:gradle-plugin-protobuf:0.9.1")
	}
}

 
configure(allprojects) { project ->
    group = "com.svsos"
    
    ext{
    	junitVersion      =   "4.11"
    	mysqlVersion      =   "5.1.24"
    	springVersion     =   "3.2.11.RELEASE"
    	jerseyVersion     =   "2.11"
    	jacksonVersion    =   "2.4.1.1"
    	tomcatjdbcVersion =   "7.0.54"
    	jacksonVersion    =   "2.4.1.1"
    	logbackVersion    =   "1.1.2"
    	slf4jVersion      =   "1.7.6"
    	springjpaVersion  =   "1.6.1.RELEASE"
    	springredisVersion =  "1.3.1.RELEASE"
    	hibernateVersion   =   "3.6.10.Final"
    	hibernateJpaVersion =  "1.0.1.Final"
    	encacheVersion     =   "2.6.9"
    	jedisVersion       =   "2.5.2"
    	springDataMongodbVersion  = "1.5.2.RELEASE"
    	httpclientVersion  =   "4.3.5"
    }
    
    apply plugin: 'eclipse-wtp'
    apply plugin: 'java'
    apply plugin: 'maven'
    apply plugin: 'jetty'
    
    compileJava {
		sourceCompatibility=1.7
		targetCompatibility=1.7
		options*.encoding="UTF-8" 
	}
	

    sourceSets.test.resources.srcDirs = ["src/test/resources", "src/test/java"]
    
    test {
  		exclude '**/*Test.class'
  		//exclude '**/*IntegrationTest.class'
	}
    
    
  
}
  
configure(subprojects) { subproject -> 
    apply plugin: 'java'
    version = '1.0'
    
    //中央仓库  
    repositories {  
        mavenCentral()  
    }     
      
    //加载本地依赖  
    dependencies {  
        compile "mysql:mysql-connector-java:${mysqlVersion}"
        compile "org.slf4j:slf4j-api:${slf4jVersion}"
        compile "ch.qos.logback:logback-classic:${logbackVersion}"
        compile "com.googlecode.log4jdbc:log4jdbc:1.2"
        compile("org.apache.tomcat:tomcat-jdbc:${tomcatjdbcVersion}")
        compile "org.apache.commons:commons-lang3:3.3.2"
        compile("org.springframework:spring-core:${springVersion}")
        compile("org.springframework:spring-beans:${springVersion}")
        compile("org.springframework:spring-context:${springVersion}")
        compile("org.springframework:spring-context-support:${springVersion}")
        compile("org.springframework:spring-web:${springVersion}")
        compile("org.springframework:spring-expression:${springVersion}")
        compile("org.springframework:spring-aop:${springVersion}")
        compile("org.springframework:spring-tx:${springVersion}")
        compile("org.springframework:spring-orm:${springVersion}")
        compile 'org.springframework.data:spring-data-commons:1.9.0.RELEASE'
        compile("org.springframework.data:spring-data-jpa:${springjpaVersion}"){
        	//transitive = false
        	exclude module: "spring-core"
        	exclude module: "spring-context"
        	exclude module: "spring-aop"
        	exclude module: "spring-beans"
        	exclude module: "spring-tx"
        }
        compile "org.aspectj:aspectjrt:1.8.2"
        testCompile "org.springframework:spring-test:${springVersion}"
        testCompile(
            "junit:junit:${junitVersion}"
        )
    } 
    
    //创建工程目录建构
	task "createProject" << {
	   sourceSets*.java.srcDirs*.each { it.mkdirs() }
	   sourceSets*.resources.srcDirs*.each { it.mkdirs() }
	} 
	
} 


//核心包工程
project(':svsos-core') {
	dependencies{
		providedCompile (
	        "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}",
	        "org.eclipse.jetty.aggregate:jetty-webapp:8.1.16.v20140903",
	        "org.eclipse.jetty:jetty-jsp:8.1.16.v20140903",
	        "org.apache.httpcomponents:httpclient:${httpclientVersion}",
	        "org.apache.httpcomponents:httpmime:${httpclientVersion}"
	    )
	    compile "commons-codec:commons-codec:1.9"
	    compile "commons-io:commons-io:2.3"
    }
}

project(':svsos-api') {
 	apply plugin: 'war'
    dependencies {
        compile project(':svsos-core')
        //compile fileTree(dir: 'libs', include: ['*.jar'])
        compile fileTree(dir:'${rootProject.name}/svsos-core/build/libs', include:['*.jar'])
        compile 'com.fasterxml.jackson.core:jackson-core:${jacksonVersion}'
        compile("org.glassfish.jersey.ext:jersey-spring3:${jerseyVersion}"){
        	transitive = false
        }
        compile "redis.clients:jedis:${jedisVersion}"
        compile "org.springframework.data:spring-data-mongodb:${springDataMongodbVersion}"
        compile "org.hibernate:hibernate-core:${hibernateVersion}"
        compile "org.hibernate:hibernate-entitymanager:${hibernateVersion}"
        compile "org.hibernate:hibernate-validator:4.3.2.Final"
        compile "org.springframework.data:spring-data-redis:${springredisVersion}"
        compile 'org.hibernate.javax.persistence:hibernate-jpa-2.0-api:1.0.1.Final'
        compile "org.glassfish.jersey.core:jersey-server:${jerseyVersion}"
        compile "org.glassfish.jersey.core:jersey-client:${jerseyVersion}"
        compile "org.glassfish.jersey.containers:jersey-container-servlet-core:${jerseyVersion}"
        compile "org.glassfish.jersey.media:jersey-media-json-jackson:${jerseyVersion}"
        compile "org.glassfish.jersey.media:jersey-media-multipart:${jerseyVersion}"
        compile "org.glassfish.hk2:spring-bridge:2.2.0"
        compile "ch.qos.logback:logback-classic:${logbackVersion}"
        compile "org.aspectj:aspectjweaver:1.8.1"
        compile "org.apache.httpcomponents:httpclient:${httpclientVersion}"
        compile "commons-fileupload:commons-fileupload:1.3.1"
        compile "commons-io:commons-io:2.3"
        compile "org.apache.httpcomponents:httpclient:${httpclientVersion}"
        compile "org.apache.httpcomponents:httpmime:${httpclientVersion}"
    }

    jettyRun {
    	httpPort = 9081
    	stopPort = 8089
    	reload ="automatic"
    	scanIntervalSeconds = 1
	}  
}


project(':svsos-web') {
 	apply plugin: 'war'
    dependencies {
        compile project(':svsos-core')
        compile fileTree(dir:'${rootProject.name}/lianxi-core/build/libs', include:['*.jar'])
        compile("org.springframework:spring-webmvc:${springVersion}")
        compile 'com.fasterxml.jackson.core:jackson-core:${jacksonVersion}'
        compile "redis.clients:jedis:${jedisVersion}"
        compile ("org.springframework.data:spring-data-mongodb:${springDataMongodbVersion}"){
        	transitive = false
        }
        compile ("org.springframework.data:spring-data-redis:${springredisVersion}"){
        	transitive = false
        }
        compile "org.hibernate:hibernate-core:${hibernateVersion}"
        compile "org.hibernate:hibernate-entitymanager:${hibernateVersion}"
        compile "org.hibernate:hibernate-validator:4.3.2.Final"
        compile "org.hibernate:hibernate-ehcache:${hibernateVersion}"
        compile "ch.qos.logback:logback-classic:${logbackVersion}"
        compile "org.aspectj:aspectjweaver:1.8.1"
        compile "org.apache.httpcomponents:httpclient:${httpclientVersion}"
        compile "commons-fileupload:commons-fileupload:1.3.1"
        compile "commons-io:commons-io:2.3"
        compile "com.google.guava:guava:18.0"
        compile "net.sf.dozer:dozer:5.5.1"
        compile "org.apache.httpcomponents:httpclient:${httpclientVersion}"
        compile "org.apache.httpcomponents:httpmime:${httpclientVersion}"
        compile "opensymphony:sitemesh:2.4.2"
        compile "javax.servlet:jstl:1.2"
        compile "javax.servlet.jsp:jsp-api:2.2.1-b03"
        compile "javax.servlet:javax.servlet-api:3.1.0"
        compile "org.apache.shiro:shiro-ehcache:1.2.3"
        compile "org.apache.shiro:shiro-spring:1.2.3"
        compile "net.sf.ehcache:ehcache-core:${encacheVersion}"
        //JMX和JVM监控
        compile("org.javasimon:javasimon-spring:3.5.1"){
        	transitive = false
        }
        compile "org.javasimon:javasimon-jdbc4:3.5.1"
        compile "org.javasimon:javasimon-console-embed:3.5.1"
        compile 'org.jolokia:jolokia:1.2.2'
        testCompile "org.mockito:mockito-all:1.9.5"
    }

	jettyRun {
 		httpPort = 9080
 		stopPort = 8088
 		reload ="automatic"
 		scanIntervalSeconds = 1
	}
	
    dependencies {
        compile project(':svsos-core')
    }
}

